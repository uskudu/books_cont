"""first

Revision ID: 08290ab09190
Revises: 
Create Date: 2025-05-16 12:56:46.252759

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '08290ab09190'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('accounts')
    op.drop_table('admins')
    op.drop_table('user_books')
    op.drop_table('user_actions')
    op.drop_index('ix_books_author', table_name='books')
    op.drop_index('ix_books_genre', table_name='books')
    op.drop_index('ix_books_price', table_name='books')
    op.drop_index('ix_books_rating', table_name='books')
    op.drop_index('ix_books_title', table_name='books')
    op.drop_table('books')
    op.drop_index('ix_users_money', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('money', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['accounts.id'], name='users_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('user_id', name='users_user_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_money', 'users', ['money'], unique=False)
    op.create_table('books',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('books_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('genre', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('times_bought', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('times_returned', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='books_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_books_title', 'books', ['title'], unique=False)
    op.create_index('ix_books_rating', 'books', ['rating'], unique=False)
    op.create_index('ix_books_price', 'books', ['price'], unique=False)
    op.create_index('ix_books_genre', 'books', ['genre'], unique=False)
    op.create_index('ix_books_author', 'books', ['author'], unique=False)
    op.create_table('user_actions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('action_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('details', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('total', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='user_actions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_actions_pkey')
    )
    op.create_table('user_books',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='user_books_book_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_books_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'book_id', name='user_books_pkey')
    )
    op.create_table('admins',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('admin_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['accounts.id'], name='admins_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='admins_pkey'),
    sa.UniqueConstraint('admin_id', name='admins_admin_id_key')
    )
    op.create_table('accounts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='accounts_pkey'),
    sa.UniqueConstraint('username', name='accounts_username_key')
    )
    # ### end Alembic commands ###
